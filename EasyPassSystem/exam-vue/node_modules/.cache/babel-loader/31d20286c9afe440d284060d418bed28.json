{"remainingRequest":"D:\\WEB\\EasyPass在线考试系统\\EasyPassSystem\\exam-vue\\node_modules\\babel-loader\\lib\\index.js!D:\\WEB\\EasyPass在线考试系统\\EasyPassSystem\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\WEB\\EasyPass在线考试系统\\EasyPassSystem\\exam-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WEB\\EasyPass在线考试系统\\EasyPassSystem\\exam-vue\\src\\views\\student\\ExamPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WEB\\EasyPass在线考试系统\\EasyPassSystem\\exam-vue\\src\\views\\student\\ExamPage.vue","mtime":1687501936603},{"path":"D:\\WEB\\EasyPass在线考试系统\\EasyPassSystem\\exam-vue\\babel.config.js","mtime":1682044119000},{"path":"D:\\WEB\\EasyPass在线考试系统\\EasyPassSystem\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686540617114},{"path":"D:\\WEB\\EasyPass在线考试系统\\EasyPassSystem\\exam-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1686540617613},{"path":"D:\\WEB\\EasyPass在线考试系统\\EasyPassSystem\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686540617114},{"path":"D:\\WEB\\EasyPass在线考试系统\\EasyPassSystem\\exam-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1686540616128}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["exam","question","ossUtils","name","data","examInfo","questionInfo","questionType","curIndex","bigImgDialog","bigImgUrl","userAnswer","loading","show","optionName","duration","mediaStreamTrack","takePhotoUrl","cameraOn","created","getExamInfo","$Loading","service","body","lock","text","spinner","window","onload","setTimeout","getCamera","times","i","push","Math","ceil","random","forEach","item","takePhoto","mounted","userAgent","navigator","isOpera","indexOf","isIE","isIE11","isEdge","_beforeUnload_time","_gap_time","is_fireFox","onunload","Date","getTime","localStorage","removeItem","examId","onbeforeunload","methods","getExamInfoById","$route","params","then","resp","code","examDuration","JSON","parse","getItem","now","timestamp","min","e","timer","setInterval","getQuestionInfo","questionIds","split","ids","getQuestionByIds","join","_resp$data","sort","a","b","close","showBigImg","url","checkSingleAnswer","index","$set","selectedMultipleAnswer","undefined","String","includes","newArr","length","uploadExamToAdmin","reg","RegExp","replace","flag","$confirm","confirmButtonText","cancelButtonText","type","userAnswers","questionId","parseInt","creditImgUrl","addExamRecord","$notify","title","message","$router","catch","closeCamera","watch","newVal","setItem","stringify","constraints","video","width","height","audio","promise","mediaDevices","getUserMedia","back"],"sources":["src/views/student/ExamPage.vue"],"sourcesContent":["<template>\n\n  <el-container v-if=\"show\">\n    <el-header style=\"margin-top: 60px\">\n      <el-row>\n        <el-col :span=\"18\" :offset=\"3\" style=\"border-bottom: 1px solid #f5f5f5\">\n          <span class=\"startExam\">开始考试</span>\n          <span class=\"examTitle\">距离考试结束还有：</span>\n          <span style=\"color: red;font-size: 18px;\">{{ duration | timeFormat }}</span>\n          <el-button type=\"warning\" round\n                     style=\"background-color: #ffd550;float: right;color: black;font-weight: 800\"\n                     @click=\"uploadExamToAdmin\">提交试卷\n          </el-button>\n        </el-col>\n      </el-row>\n    </el-header>\n\n    <el-main>\n      <el-row>\n        <el-col :span=\"18\" :offset=\"3\">\n          <el-col :span=\"16\">\n            <el-card style=\"min-height: 500px\">\n              <!--题目信息-->\n              <div>\n                <i class=\"num\">{{ curIndex + 1 }}</i>\n                <span v-if=\"questionInfo[curIndex].questionType === 1\">【单选题】</span>\n                <span v-else-if=\"questionInfo[curIndex].questionType === 2\">【多选题】</span>\n                <span v-else-if=\"questionInfo[curIndex].questionType === 3\">【判断题】</span>\n                <span v-else>【简答题】</span>\n                <span>{{ questionInfo[curIndex].questionContent }}:</span>\n              </div>\n              \n              <!--单选 和 判断 的答案列表-->\n              <div style=\"margin-top: 25px\"\n                   v-show=\"questionInfo[curIndex].questionType === 1 || questionInfo[curIndex].questionType === 3\">\n                <div class=\"el-radio-group\">\n                  <label v-for=\"(item,index) in questionInfo[curIndex].answer\"\n                         @click=\"checkSingleAnswer(index)\"\n                         :class=\"index === userAnswer[curIndex] ? 'active' : ''\">\n                    <span>{{ optionName[index] + '、' + item.answer }}</span>\n                     </label>\n                </div>\n              </div>\n\n              <!--多选的答案列表-->\n              <div style=\"margin-top: 25px\" v-show=\"questionInfo[curIndex].questionType === 2\">\n                <div class=\"el-radio-group\">\n                  <label v-for=\"(item,index) in questionInfo[curIndex].answer\"\n                         @click=\"selectedMultipleAnswer(index)\"\n                         :class=\"(userAnswer[curIndex]+'').indexOf(index+'') !== -1? 'active' : ''\">\n                    <span>{{ optionName[index] + '、' + item.answer }}</span>\n                     </label>\n                </div>\n              </div>\n\n              <!--简答题的答案-->\n              <div style=\"margin-top: 25px\" v-show=\"questionInfo[curIndex].questionType === 4\">\n                <el-input\n                  type=\"textarea\"\n                  :rows=\"8\"\n                  placeholder=\"请输入答案\"\n                  v-model=\"userAnswer[curIndex]\">\n                </el-input>\n              </div>\n\n              <!--上一题 下一题-->\n              <div style=\"margin-top: 25px\">\n                <el-button type=\"primary\" icon=\"el-icon-back\" :disabled=\"curIndex<1\" @click=\"curIndex--\">上一题</el-button>\n                <el-button type=\"primary\" icon=\"el-icon-right\" :disabled=\"curIndex>=questionInfo.length-1\"\n                           @click=\"curIndex++\">下一题\n                </el-button>\n              </div>\n\n            </el-card>\n          </el-col>\n\n          <el-col :span=\"7\" :offset=\"1\">\n            <!--答题卡卡片-->\n            <el-card>\n              <div>\n                <p style=\"font-size: 18px;\">答题卡</p>\n                <div style=\"margin-top: 25px\">\n                  <span\n                    style=\"background-color: rgb(238,238,238);padding: 5px 10px 5px 10px;margin-left: 15px\">未作答</span>\n                  <span style=\"background-color: rgb(87,148,247);color: white;\n                padding: 5px 10px 5px 10px;margin-left: 15px\">已作答</span>\n                </div>\n              </div>\n\n              <!--单选的答题卡-->\n              <div style=\"margin-top: 25px\">\n                <p style=\"font-size: 18px;\">单选题</p>\n                <el-button style=\"margin-top: 10px;margin-left: 15px\" size=\"mini\"\n                           v-show=\"questionInfo[item-1].questionType === 1\"\n                           :class=\"questionInfo[item-1].questionType === 1 && userAnswer[item-1] !== undefined ?\n                            'done' : userAnswer[item-1] === undefined ? curIndex === (item-1) ? 'orange' : 'noAnswer' : 'noAnswer'\"\n                           v-for=\"item in questionInfo.length\" :key=\"item\" @click=\"curIndex = item-1\">{{ item }}\n                </el-button>\n              </div>\n\n              <!--多选的答题卡-->\n              <div style=\"margin-top: 25px\">\n                <p style=\"font-size: 18px;\">多选题</p>\n                <el-button style=\"margin-top: 10px;margin-left: 15px\" size=\"mini\"\n                           v-show=\"questionInfo[item-1].questionType === 2\"\n                           :class=\"questionInfo[item-1].questionType === 2 && userAnswer[item-1] !== undefined ?\n                            'done' : userAnswer[item-1] === undefined ? curIndex === (item-1) ? 'orange' : 'noAnswer' : 'noAnswer'\"\n                           v-for=\"item in questionInfo.length\" :key=\"item\" @click=\"curIndex = item-1\">{{ item }}\n                </el-button>\n              </div>\n\n              <!--判断的答题卡-->\n              <div style=\"margin-top: 25px\">\n                <p style=\"font-size: 18px;\">判断题</p>\n                <el-button style=\"margin-top: 10px;margin-left: 15px\" size=\"mini\"\n                           v-show=\"questionInfo[item-1].questionType === 3\"\n                           :class=\"questionInfo[item-1].questionType === 3 && userAnswer[item-1] !== undefined ?\n                            'done' : userAnswer[item-1] === undefined ? curIndex === (item-1) ? 'orange' : 'noAnswer' : 'noAnswer'\"\n                           v-for=\"item in questionInfo.length\" :key=\"item\" @click=\"curIndex = item-1\">{{ item }}\n                </el-button>\n              </div>\n\n              <!--简答的答题卡-->\n              <div style=\"margin-top: 25px\">\n                <p style=\"font-size: 18px;\">简答题</p>\n                <el-button style=\"margin-top: 10px;margin-left: 15px\" size=\"mini\"\n                           v-show=\"questionInfo[item-1].questionType === 4\"\n                           :class=\"questionInfo[item-1].questionType === 4 && userAnswer[item-1] !== undefined ?\n                            'done' : userAnswer[item-1] === undefined ? curIndex === (item-1) ? 'orange' : 'noAnswer' : 'noAnswer'\"\n                           v-for=\"item in questionInfo.length\" :key=\"item\" @click=\"curIndex = item-1\">{{ item }}\n                </el-button>\n              </div>\n            </el-card>\n          </el-col>\n\n        </el-col>\n      </el-row>\n      <video id=\"video\" muted=\"muted\" style=\"float:right;position: fixed;top: 80%;left: 85%\" width=\"200px\"\n             height=\"200px\" autoplay=\"autoplay\"></video>\n      <canvas id=\"canvas\" hidden width=\"200px\" height=\"200px\"></canvas>\n    </el-main>\n    <!--图片回显-->\n    <el-dialog :visible.sync=\"bigImgDialog\" @close=\"bigImgDialog = false\">\n      <img style=\"width: 100%\" :src=\"bigImgUrl\">\n    </el-dialog>\n  </el-container>\n\n</template>\n\n<script>\n\nimport exam from '@/api/exam'\nimport question from '@/api/question'\nimport ossUtils from '@/api/ossUtils'\n\nexport default {\n  name: 'ExamPage',\n  data() {\n    return {\n      //当前考试的信息\n      examInfo: {},\n      //当前的考试题目\n      questionInfo: [\n        {\n          questionType: ''\n        }\n      ],\n      //当前题目的索引值\n      curIndex: 0,\n      //控制大图的对话框\n      bigImgDialog: false,\n      //当前要展示的大图的url\n      bigImgUrl: '',\n      //用户选择的答案\n      userAnswer: [],\n      //页面数据加载\n      loading: {},\n      //页面绘制是否开始\n      show: false,\n      //答案的选项名abcd数据\n      optionName: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n      //考试总时长\n      duration: 0,\n      //摄像头对象\n      mediaStreamTrack: null,\n      //诚信照片的url\n      takePhotoUrl: [],\n      //摄像头是否开启\n      cameraOn: false,\n    }\n  },\n  created() {\n    this.getExamInfo()\n    //页面数据加载的等待状态栏\n    this.loading = this.$Loading.service({\n      body: true,\n      lock: true,\n      text: '数据拼命加载中,(*╹▽╹*)',\n      spinner: 'el-icon-loading',\n    })\n    //开启摄像头\n    window.onload = () => {\n      setTimeout(() => {\n        this.getCamera()\n      }, 1000)\n\n      //生成3次时间点截图\n      let times = []\n      for (let i = 0; i < 2; i++) {\n        times.push(Math.ceil(Math.random() * this.duration * 1000))\n      }\n      times.push(10000)\n      //一次考试最多3次随机的诚信截图\n      times.forEach(item => {\n        window.setTimeout(() => {\n          this.takePhoto()\n        }, item)\n      })\n    }\n  },\n  mounted() {\n    //关闭浏览器窗口的时候移除 localstorage的时长\n    var userAgent = navigator.userAgent //取得浏览器的userAgent字符串\n    var isOpera = userAgent.indexOf('Opera') > -1 //判断是否Opera浏览器\n    var isIE = userAgent.indexOf('compatible') > -1 && userAgent.indexOf('MSIE') > -1 && !isOpera //判断是否IE浏览器\n    var isIE11 = userAgent.indexOf('rv:11.0') > -1 //判断是否是IE11浏览器\n    var isEdge = userAgent.indexOf('Edge') > -1 && !isIE //判断是否IE的Edge浏览器\n    if (!isIE && !isEdge && !isIE11) {//兼容chrome和firefox\n      var _beforeUnload_time = 0, _gap_time = 0\n      var is_fireFox = navigator.userAgent.indexOf('Firefox') > -1//是否是火狐浏览器\n      window.onunload = function () {\n        _gap_time = new Date().getTime() - _beforeUnload_time\n        if (_gap_time <= 5) {\n          localStorage.removeItem('examDuration' + this.examInfo.examId)\n        } else {//谷歌浏览器刷新\n        }\n      }\n      window.onbeforeunload = function () {\n        _beforeUnload_time = new Date().getTime()\n        if (is_fireFox) {//火狐关闭执行\n\n        } else {//火狐浏览器刷新\n        }\n      }\n    }\n  },\n  methods: {\n    //查询当前考试的信息\n    getExamInfo() {\n      exam.getExamInfoById(this.$route.params).then((resp) => {\n        if (resp.code === 200) {\n          this.examInfo = resp.data\n          //设置定时(秒)\n          try {\n            const examDuration = JSON.parse(localStorage.getItem('examDuration' + this.examInfo.examId) || \"{}\");\n            if (examDuration.duration === 0 || Date.now() >= (examDuration.timestamp || Date.now()) + (examDuration.duration * 1000 || Date.now())) {\n              localStorage.removeItem('examDuration' + this.examInfo.examId)\n            }\n            this.duration = Math.min(JSON.parse(localStorage.getItem('examDuration' + this.examInfo.examId) || \"{}\").duration || resp.data.examDuration * 60, resp.data.examDuration * 60)\n          } catch (e) {\n            localStorage.removeItem('examDuration' + this.examInfo.examId)\n          }\n          //考试剩余时间定时器\n          this.timer = window.setInterval(() => {\n            if (this.duration > 0) this.duration--\n          }, 1000)\n          this.getQuestionInfo(resp.data.questionIds.split(','))\n        }\n      })\n    },\n    //查询考试的题目信息\n    async getQuestionInfo(ids) {\n      await question.getQuestionByIds({'ids': ids.join(',')}).then(resp => {\n        if (resp.code === 200) {\n          this.questionInfo = resp?.data?.data || []\n          //重置问题的顺序 单选 多选 判断 简答\n          this.questionInfo = this.questionInfo.sort(function (a, b) {\n            return a.questionType - b.questionType\n          })\n        }\n      })\n      this.loading.close()\n      this.show = true\n    },\n    //点击展示高清大图\n    showBigImg(url) {\n      this.bigImgUrl = url\n      this.bigImgDialog = true\n    },\n    //检验单选题的用户选择的答案\n    checkSingleAnswer(index) {\n      this.$set(this.userAnswer, this.curIndex, index)\n    },\n    //多选题用户的答案选中\n    selectedMultipleAnswer(index) {\n      if (this.userAnswer[this.curIndex] === undefined) {//当前是多选的第一个答案\n        this.$set(this.userAnswer, this.curIndex, index)\n      } else if (String(this.userAnswer[this.curIndex]).split(',').includes(index + '')) {//取消选中\n        let newArr = []\n        String(this.userAnswer[this.curIndex]).split(',').forEach(item => {\n          if (item !== '' + index) newArr.push(item)\n        })\n        if (newArr.length === 0) {\n          this.$set(this.userAnswer, this.curIndex, undefined)\n        } else {\n          this.$set(this.userAnswer, this.curIndex, newArr.join(','))\n          //答案格式化顺序DBAC -> ABCD\n          this.userAnswer[this.curIndex] = String(this.userAnswer[this.curIndex]).split(',').sort(function (a, b) {\n            return a - b\n          }).join(',')\n        }\n      } else if (!((this.userAnswer[this.curIndex] + '').split(',').includes(index + ''))) {//第n个答案\n        this.$set(this.userAnswer, this.curIndex, this.userAnswer[this.curIndex] += ',' + index)\n        //答案格式化顺序DBAC -> ABCD\n        this.userAnswer[this.curIndex] = String(this.userAnswer[this.curIndex]).split(',').sort(function (a, b) {\n          return a - b\n        }).join(',')\n      }\n    },\n    //调用摄像头\n    // getCamera() {\n    //   let constraints = {\n    //     video: {\n    //       width: 200,\n    //       height: 200\n    //     },\n    //     audio: false\n    //   }\n    //   //获得video摄像头\n    //   let video = document.getElementById('video')\n    //   let promise = navigator.mediaDevices.getUserMedia(constraints)\n    //   promise.then((mediaStream) => {\n    //     this.mediaStreamTrack = typeof mediaStream.stop === 'function' ? mediaStream : mediaStream.getTracks()[1]\n    //     video.srcObject = mediaStream\n    //     video.play()\n    //     this.cameraOn = true\n    //   }).catch((back) => {\n    //     this.$message({\n    //       duration: 1500,\n    //       message: '请开启摄像头权限o(╥﹏╥)o!',\n    //       type: 'error'\n    //     })\n    //   })\n    // },\n    // //拍照\n    // async takePhoto() {\n    //   if (this.cameraOn) {//摄像头是否开启 开启了才执行上传信用图片\n    //     //获得Canvas对象\n    //     let video = document.getElementById('video')\n    //     let canvas = document.getElementById('canvas')\n    //     let ctx = canvas.getContext('2d')\n    //     ctx.drawImage(video, 0, 0, 200, 200)\n    //     // toDataURL  ---  可传入'image/png'---默认, 'image/jpeg'\n    //     let img = document.getElementById('canvas').toDataURL()\n\n    //     //构造post的form表单\n    //     let formData = new FormData()\n    //     //convertBase64UrlToBlob函数是将base64编码转换为Blob\n    //     formData.append('file', this.base64ToFile(img, 'examTakePhoto.png'))\n    //     //上传阿里云OSS\n    //     await ossUtils.uploadImage(formData).then((resp) => {\n    //       if (resp.code === 200) this.takePhotoUrl.push(resp.data)\n    //     })\n    //   }\n    // },\n    // //关闭摄像头\n    // closeCamera() {\n    //   let stream = document.getElementById('video').srcObject\n    //   let tracks = stream.getTracks()\n    //   tracks.forEach(function (track) {\n    //     track.stop()\n    //   })\n    //   document.getElementById('video').srcObject = null\n    // },\n    // //将摄像头截图的base64串转化为file提交后台\n    // base64ToFile(urlData, fileName) {\n    //   let arr = urlData.split(',')\n    //   let mime = arr[0].match(/:(.*?);/)[1]\n    //   let bytes = atob(arr[1]) // 解码base64\n    //   let n = bytes.length\n    //   let ia = new Uint8Array(n)\n    //   while (n--) {\n    //     ia[n] = bytes.charCodeAt(n)\n    //   }\n    //   return new File([ia], fileName, {type: mime})\n    // },\n    //上传用户考试信息进入后台\n    async uploadExamToAdmin() {\n      if (this.cameraOn) await this.takePhoto()//结束的时候拍照上传一张\n      // 正则\n      var reg = new RegExp('-', 'g')\n      // 去掉用户输入的非法分割符号(-),保证后端接受数据处理不报错\n      this.userAnswer.forEach((item, index) => {\n        if (this.questionInfo[index].questionType === 4) {//简答题答案处理\n          this.userAnswer[index] = item.replace(reg, ' ')\n        }\n      })\n\n      // 标记题目是否全部做完\n      let flag = true\n      for (let i = 0; i < this.userAnswer.length; i++) {// 检测用户是否题目全部做完\n        if (this.userAnswer[i] === undefined) {\n          flag = false\n        }\n      }\n      // 如果用户所有答案的数组长度小于题目长度,这个时候也要将标志位置为false\n      if (this.userAnswer.length < this.questionInfo.length) {\n        flag = false\n      }\n      //题目未做完\n      if (!flag) {\n        // if (this.userAnswer.some((item) => item === undefined)) {\n        this.$confirm('当前试题暂未做完, 是否继续提交o(╥﹏╥)o ?', 'Tips', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          let data = {}\n          data.questionIds = []\n          data.userAnswers = this.userAnswer.join('-')\n          this.questionInfo.forEach((item, index) => {\n            data.questionIds.push(item.questionId)\n            //当前数据不完整,用户回答不完整(我们自动补充空答案,防止业务出错)\n            if (index > (this.userAnswer.length - 1)) {\n              data.userAnswers += '- '\n            }\n          })\n          //如果所有题目全部未答\n          if (this.userAnswer.length === 0) {\n            this.questionInfo.forEach(item => {\n              data.userAnswers += ' -'\n            })\n            data.userAnswers.split(0, data.userAnswers.length - 1)\n          }\n          data.examId = parseInt(this.$route.params.examId)\n          data.questionIds = data.questionIds.join(',')\n          data.creditImgUrl = this.takePhotoUrl.join(',')\n          exam.addExamRecord(data).then((resp) => {\n            if (resp.code === 200) {\n              this.$notify({\n                title: 'Tips',\n                message: '考试结束 *^▽^*',\n                type: 'success',\n                duration: 2000\n              })\n              this.$router.push('/examResult/' + resp.data)\n            }\n          })\n        }).catch(() => {\n          this.$notify({\n            title: 'Tips',\n            message: '继续加油! *^▽^*',\n            type: 'success',\n            duration: 2000\n          })\n        })\n      } else {//当前题目做完了\n        if (this.cameraOn) {\n          //结束的时候拍照上传一张\n          await this.takePhoto()\n          this.closeCamera()\n        }\n        let data = {}\n        data.questionIds = []\n        data.userAnswers = this.userAnswer.join('-')\n        data.examId = parseInt(this.$route.params.examId)\n        data.creditImgUrl = this.takePhotoUrl.join(',')\n        this.questionInfo.forEach((item, index) => {\n          data.questionIds.push(item.questionId)\n        })\n        data.questionIds = data.questionIds.join(',')\n        exam.addExamRecord(data).then((resp) => {\n          if (resp.code === 200) {\n            this.$notify({\n              title: 'Tips',\n              message: '考试结束 *^▽^*',\n              type: 'success',\n              duration: 2000\n            })\n            this.$router.push('/examResult/' + resp.data)\n          }\n        })\n      }\n    }\n  },\n  watch: {\n    //监控考试的剩余时间\n    async duration(newVal) {//异步函数\n      const examDuration = {\n        duration: newVal,\n        timestamp: Date.now()\n      };\n      localStorage.setItem('examDuration' + this.examInfo.examId, JSON.stringify(examDuration));\n      //摄像头数据\n      let constraints = {\n        video: {\n          width: 200,\n          height: 200\n        },\n        audio: false\n      }\n      //通过调用摄像头判断用户是否中途关闭摄像头\n      let promise = navigator.mediaDevices.getUserMedia(constraints)\n      promise.catch((back) => {\n        this.cameraOn = false\n      })\n      if (!this.cameraOn) {//如果摄像头未开启,就再次调用开启\n        this.getCamera()\n      }\n      //考试时间结束了提交试卷\n      if (newVal < 1) {\n        if (this.cameraOn) {\n          //结束的时候拍照上传一张\n          await this.takePhoto()\n          this.closeCamera()\n        }\n        let data = {}\n        data.questionIds = []\n        data.userAnswers = this.userAnswer.join('-')\n        this.questionInfo.forEach((item, index) => {\n          data.questionIds.push(item.questionId)\n          //当前数据不完整,用户回答不完整(我们自动补充空答案,防止业务出错)\n          if (index > this.userAnswer.length) {\n            data.userAnswers += ' -'\n          }\n        })\n        //如果所有题目全部未答\n        if (data.userAnswers === '') {\n          this.questionInfo.forEach(item => {\n            data.userAnswers += ' -'\n          })\n          data.userAnswers.split(0, data.userAnswers.length - 1)\n        }\n        data.examId = parseInt(this.$route.params.examId)\n\n        data.questionIds = data.questionIds.join(',')\n        data.creditImgUrl = this.takePhotoUrl.join(',')\n        exam.addExamRecord(data).then((resp) => {\n          if (resp.code === 200) {\n            this.$notify({\n              title: 'Tips',\n              message: '考试时间结束,已为您自动提交 *^▽^*',\n              type: 'success',\n              duration: 2000\n            })\n            this.$router.push('/examResult/' + resp.data)\n          }\n        })\n      }\n    },\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"../../assets/css/student/examPage\";\n</style>\n"],"mappings":"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"}]}