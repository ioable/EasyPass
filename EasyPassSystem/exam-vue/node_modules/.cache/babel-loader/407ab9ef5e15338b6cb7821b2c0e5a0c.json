{"remainingRequest":"D:\\BaiduDownload\\projectmass\\exam-vue\\node_modules\\babel-loader\\lib\\index.js!D:\\BaiduDownload\\projectmass\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\BaiduDownload\\projectmass\\exam-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\BaiduDownload\\projectmass\\exam-vue\\src\\views\\teacher\\StatisticOverview.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\BaiduDownload\\projectmass\\exam-vue\\src\\views\\teacher\\StatisticOverview.vue","mtime":1687271505684},{"path":"D:\\BaiduDownload\\projectmass\\exam-vue\\babel.config.js","mtime":1682044119000},{"path":"D:\\BaiduDownload\\projectmass\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686540617114},{"path":"D:\\BaiduDownload\\projectmass\\exam-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1686540617613},{"path":"D:\\BaiduDownload\\projectmass\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686540617114},{"path":"D:\\BaiduDownload\\projectmass\\exam-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1686540616128}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCBzdGF0aXN0aWMgZnJvbSAnQC9hcGkvc3RhdGlzdGljJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTdGF0aXN0aWNPdmVydmlldycsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIC8v6ICD6K+V5ZCN56ewCiAgICAgIGV4YW1OYW1lczogW10sCiAgICAgIC8v6ICD6K+V6YCa6L+H546HCiAgICAgIHBhc3NSYXRlOiBbXSwKICAgICAgLy/ppbzlm77nmoTmlbDmja4KICAgICAgcGllRGF0YTogW10KICAgIH07CiAgfSwKICBjcmVhdGVkKCkgewogICAgLy/pobXpnaLmlbDmja7liqDovb3nmoTnrYnlvoXnirbmgIHmoI8KICAgIHRoaXMubG9hZGluZyA9IHRoaXMuJExvYWRpbmcuc2VydmljZSh7CiAgICAgIGJvZHk6IHRydWUsCiAgICAgIGxvY2s6IHRydWUsCiAgICAgIHRleHQ6ICfmlbDmja7mi7zlkb3liqDovb3kuK0sKCrilbnilr3ilbkqKScsCiAgICAgIHNwaW5uZXI6ICdlbC1pY29uLWxvYWRpbmcnCiAgICB9KTsKICAgIHRoaXMuZ2V0RXhhbVBhc3NSYXRlKCk7CiAgICB0aGlzLmdldEV4YW1OdW1iZXJzKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBnZXRFeGFtUGFzc1JhdGUoKSB7CiAgICAgIGF3YWl0IHN0YXRpc3RpYy5nZXRFeGFtUGFzc1JhdGUoKS50aGVuKHJlc3AgPT4gewogICAgICAgIGlmIChyZXNwLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgdGhpcy5leGFtTmFtZXMgPSByZXNwLmRhdGFbMF0uc3BsaXQoJywnKTsKICAgICAgICAgIHRoaXMucGFzc1JhdGUgPSByZXNwLmRhdGFbMV0uc3BsaXQoJywnKTsKICAgICAgICAgIHRoaXMuZHJhd0xpbmUoKTsKICAgICAgICAgIHRoaXMuZHJhd0Jyb2tlbkxpbmUoKTsKICAgICAgICAgIHRoaXMuZHJhd0ltZzQoKTsKICAgICAgICAgIHRoaXMubG9hZGluZy5jbG9zZSgpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgLy/ogIPor5XpgJrov4fnjofmn7Hnirblm74gIAogICAgZHJhd0xpbmUoKSB7CiAgICAgIC8vIOWfuuS6juWHhuWkh+WlveeahGRvbe+8jOWIneWni+WMlmVjaGFydHPlrp7kvosKICAgICAgbGV0IG15Q2hhcnQgPSB0aGlzLiRlY2hhcnRzLmluaXQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ltZzEnKSk7CiAgICAgIC8vIOe7mOWItuWbvuihqAogICAgICBteUNoYXJ0LnNldE9wdGlvbih7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICfogIPor5XpgJrov4fnjocnLAogICAgICAgICAgc3VidGV4dDogJ2Rhc2hib3JkMScsCiAgICAgICAgICB4OiAnY2VudGVyJywKICAgICAgICAgIHk6ICd0b3AnLAogICAgICAgICAgdGV4dEFsaWduOiAnY2VudGVyJwogICAgICAgIH0sCiAgICAgICAgdG9vbHRpcDoge30sCiAgICAgICAgeEF4aXM6IHsKICAgICAgICAgIGRhdGE6IHRoaXMuZXhhbU5hbWVzCiAgICAgICAgfSwKICAgICAgICB5QXhpczoge30sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgbmFtZTogJ+mAmui/h+eOhycsCiAgICAgICAgICB0eXBlOiAnYmFyJywKICAgICAgICAgIGRhdGE6IHRoaXMucGFzc1JhdGUKICAgICAgICB9XQogICAgICB9KTsKICAgIH0sCiAgICAvL+iOt+WPluiAg+ivleasoeaVsOaVsOaNrgogICAgYXN5bmMgZ2V0RXhhbU51bWJlcnMoKSB7CiAgICAgIGF3YWl0IHN0YXRpc3RpYy5nZXRFeGFtTnVtYmVycygpLnRoZW4ocmVzcCA9PiB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcCk7CiAgICAgICAgbGV0IGV4YW1OYW1lcyA9IHJlc3AuZGF0YVswXS5zcGxpdCgnLCcpOwogICAgICAgIGxldCBleGFtTnVtYmVycyA9IHJlc3AuZGF0YVsxXS5zcGxpdCgnLCcpOwogICAgICAgIGV4YW1OYW1lcy5mb3JFYWNoKChpdGVtLCBpbmRleCkgPT4gewogICAgICAgICAgdGhpcy5waWVEYXRhLnB1c2goewogICAgICAgICAgICBuYW1lOiBpdGVtLAogICAgICAgICAgICB2YWx1ZTogcGFyc2VJbnQoZXhhbU51bWJlcnNbaW5kZXhdKQogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5kcmF3UGllKCk7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIHRoaXMuZXhhbU5hbWVzIOWSjCB0aGlzLnBhc3NSYXRlIOWIhuWIq+aYryB4IOi9tOWSjOafseeKtuWbvueahOaVsOaNru+8jOi/memHjOW6lOivpeaYr+WcqOe7hOS7tuS4reWumuS5ieeahOOAggogICAgLy/ogIPor5XmrKHmlbDppbzlm74KICAgIGRyYXdQaWUoKSB7CiAgICAgIC8vIOWfuuS6juWHhuWkh+WlveeahGRvbe+8jOWIneWni+WMlmVjaGFydHPlrp7kvosKICAgICAgbGV0IG15Q2hhcnQgPSB0aGlzLiRlY2hhcnRzLmluaXQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ltZzInKSk7CiAgICAgIC8v5Yid5aeL5YyW5LiA5LiqIEVDaGFydHMg5a6e5L6L77yM5bm25oyH5a6a6KaB5pi+56S655qEIERPTSDlhYPntKAKICAgICAgbXlDaGFydC5zZXRPcHRpb24oewogICAgICAgIC8v6K6+572u5Zu+6KGo55qE5qCH6aKY44CB5o+Q56S65qGG44CB5Zu+5L6L5ZKM5pWw5o2u562J44CCCiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICfogIPor5XmrKHmlbDljaDmr5QnLAogICAgICAgICAgc3VidGV4dDogJ2Rhc2hib3JkMicsCiAgICAgICAgICB4OiAnY2VudGVyJwogICAgICAgIH0sCiAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgLy90b29sdGlwIOWxnuaAp+ihqOekuum8oOagh+aCrOWBnOWcqOWbvuihqOS4iuaXtuaYvuekuueahOaPkOekuuahhgogICAgICAgICAgdHJpZ2dlcjogJ2l0ZW0nLAogICAgICAgICAgZm9ybWF0dGVyOiAne2F9IDxici8+e2J9IDoge2N95qyhICh7ZH0lKScKICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgb3JpZW50OiAndmVydGljYWwnLAogICAgICAgICAgbGVmdDogJ2xlZnQnLAogICAgICAgICAgZGF0YTogdGhpcy5waWVEYXRhCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICBuYW1lOiAn6ICD6K+V5qyh5pWwJywKICAgICAgICAgIHR5cGU6ICdwaWUnLAogICAgICAgICAgcmFkaXVzOiAnNTUlJywKICAgICAgICAgIGRhdGE6IHRoaXMucGllRGF0YSwKICAgICAgICAgIHJvc2VUeXBlOiAnYW5nbGUnLAogICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgIG5vcm1hbDogewogICAgICAgICAgICAgIHNoYWRvd0JsdXI6IDIwMCwKICAgICAgICAgICAgICBzaGFkb3dDb2xvcjogJ3JnYmEoMCwgMCwgMCwgMC41KScKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH1dCiAgICAgIH0pOwogICAgfSwKICAgIC8v6YCa6L+H546H55qE5oqY57q/5Zu+IOe7meaKmOe6v+WbvuWhq+WFheminOiJsu+8jOS7juiAjOW9ouaIkOmdouenr+WbvgogICAgZHJhd0Jyb2tlbkxpbmUoKSB7CiAgICAgIC8v5Yid5aeL5YyWZWhjaGFydHPlrp7kvosKICAgICAgbGV0IG15Q2hhcnQgPSB0aGlzLiRlY2hhcnRzLmluaXQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ltZzMnKSk7CiAgICAgIC8v5oyH5a6a5Zu+6KGo55qE6YWN572u6aG55ZKM5pWw5o2uCiAgICAgIHZhciBvcHRpb24gPSB7CiAgICAgICAgLy/moIfpopgKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogJ+iAg+ivlemAmui/h+eOh+aKmOe6v+WbvicsCiAgICAgICAgICB4OiAnY2VudGVyJwogICAgICAgIH0sCiAgICAgICAgLy946L20CiAgICAgICAgeEF4aXM6IHsKICAgICAgICAgIGRhdGE6IHRoaXMuZXhhbU5hbWVzCiAgICAgICAgfSwKICAgICAgICAvL3novbTmsqHmnInmmL7lvI/orr7nva7vvIzmoLnmja7lgLzoh6rliqjnlJ/miJB56L20CiAgICAgICAgeUF4aXM6IHt9LAogICAgICAgIC8v5pWw5o2uLWRhdGHmmK/mnIDnu4jopoHmmL7npLrnmoTmlbDmja4KICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICBuYW1lOiAn6YCa6L+H546HJywKICAgICAgICAgIHR5cGU6ICdsaW5lJywKICAgICAgICAgIGFyZWFTdHlsZTogewogICAgICAgICAgICBub3JtYWw6IHt9CiAgICAgICAgICB9LAogICAgICAgICAgZGF0YTogdGhpcy5wYXNzUmF0ZQogICAgICAgIH1dCiAgICAgIH07CiAgICAgIC8v5L2/55So5Yia5Yia5oyH5a6a55qE6YWN572u6aG55ZKM5pWw5o2u6aG55pi+56S65Zu+6KGoCiAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7CiAgICB9LAogICAgZHJhd0ltZzQoKSB7CiAgICAgIC8v5Y675o6JeOi9tOS4pOerr+eahOeVmeeZveOAggogICAgICBsZXQgbXlDaGFydCA9IHRoaXMuJGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW1nNCcpKTsKICAgICAgbXlDaGFydC5zZXRPcHRpb24oewogICAgICAgIGNvbG9yOiBbJyNjZDVjNWMnXSwKICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgIGNvbG9yOiAnYmxhY2snCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycsCiAgICAgICAgICBheGlzUG9pbnRlcjogewogICAgICAgICAgICB0eXBlOiAnc2hhZG93JwogICAgICAgICAgfSwKICAgICAgICAgIGZvcm1hdHRlcjogJ3thfSA8YnIvPntifSA6IHtjfScKICAgICAgICB9LAogICAgICAgIGdyaWQ6IHsKICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgeEF4aXM6IHsKICAgICAgICAgIHR5cGU6ICd2YWx1ZScsCiAgICAgICAgICBib3VuZGFyeUdhcDogWzAsIDAuMDFdLAogICAgICAgICAgYXhpc0xpbmU6IHsKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjZmZmJwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgJ2F4aXNMYWJlbCc6IHsKICAgICAgICAgICAgJ2ludGVydmFsJzogMCwKICAgICAgICAgICAgZm9udFNpemU6IDE4LAogICAgICAgICAgICBmb3JtYXR0ZXI6ICd7dmFsdWV9JwogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgeUF4aXM6IHsKICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnI2ZmZicKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgICdheGlzTGFiZWwnOiB7CiAgICAgICAgICAgICdpbnRlcnZhbCc6IDAsCiAgICAgICAgICAgIGZvbnRTaXplOiAxOAogICAgICAgICAgfSwKICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsCiAgICAgICAgICBkYXRhOiB0aGlzLmV4YW1OYW1lcwogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgbmFtZTogJ+mAmui/h+eOh++8micsCiAgICAgICAgICB0eXBlOiAnYmFyJywKICAgICAgICAgIGRhdGE6IHRoaXMucGFzc1JhdGUKICAgICAgICB9XQogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"names":["statistic","name","data","examNames","passRate","pieData","created","loading","$Loading","service","body","lock","text","spinner","getExamPassRate","getExamNumbers","methods","then","resp","code","split","drawLine","drawBrokenLine","drawImg4","close","myChart","$echarts","init","document","getElementById","setOption","title","subtext","x","y","textAlign","tooltip","xAxis","yAxis","series","type","console","log","examNumbers","forEach","item","index","push","value","parseInt","drawPie","trigger","formatter","legend","orient","left","radius","roseType","itemStyle","normal","shadowBlur","shadowColor","option","areaStyle","color","textStyle","axisPointer","grid","containLabel","boundaryGap","axisLine","lineStyle","fontSize"],"sources":["src/views/teacher/StatisticOverview.vue"],"sourcesContent":["<template>\n  <el-container>\n\n      <el-row>\n        <div id=\"img1\" style=\"width: 800px;height:400px;\"></div>\n        <div id=\"img2\" style=\"width: 800px;height:400px;\"></div>\n      </el-row>\n\n      <el-row>\n        <div id=\"img3\" style=\"width: 800px;height:400px;\"></div>\n        <div id=\"img4\" style=\"width: 800px;height:400px;\"></div>\n      </el-row>\n\n  </el-container>\n</template>\n\n<script>\nimport statistic from '@/api/statistic'\n\nexport default {\n  name: 'StatisticOverview',\n  data () {\n    return {\n      //考试名称\n      examNames: [],\n      //考试通过率\n      passRate: [],\n      //饼图的数据\n      pieData: [],\n    }\n  },\n  created () {\n    //页面数据加载的等待状态栏\n    this.loading = this.$Loading.service({\n      body: true,\n      lock: true,\n      text: '数据拼命加载中,(*╹▽╹*)',\n      spinner: 'el-icon-loading',\n    })\n    this.getExamPassRate()\n    this.getExamNumbers()\n  },\n  methods: {\n    async getExamPassRate () {\n      await statistic.getExamPassRate().then((resp) => {\n        if (resp.code === 200) {\n          this.examNames = resp.data[0].split(',')\n          this.passRate = resp.data[1].split(',')\n          this.drawLine()\n          this.drawBrokenLine()\n          this.drawImg4()\n          this.loading.close()\n        }\n      })\n    },\n    //考试通过率柱状图  \n    drawLine () {\n      // 基于准备好的dom，初始化echarts实例\n      let myChart = this.$echarts.init(document.getElementById('img1'))\n      // 绘制图表\n      myChart.setOption({\n        title: {\n          text: '考试通过率',\n          subtext: 'dashbord1',\n          x: 'center',\n          y: 'top',\n          textAlign: 'center'\n        },\n        tooltip: {},\n        xAxis: {\n          data: this.examNames\n        },\n        yAxis: {},\n        series: [{\n          name: '通过率',\n          type: 'bar',\n          data: this.passRate\n        }]\n      })\n    },\n    //获取考试次数数据\n    async getExamNumbers () {\n      await statistic.getExamNumbers().then((resp) => {\n        console.log(resp)\n        let examNames = resp.data[0].split(',')\n        let examNumbers = resp.data[1].split(',')\n        examNames.forEach((item, index) => {\n          this.pieData.push({\n            name: item,\n            value: parseInt(examNumbers[index])\n          })\n        })\n        this.drawPie()\n      })\n    },\n    // this.examNames 和 this.passRate 分别是 x 轴和柱状图的数据，这里应该是在组件中定义的。\n    //考试次数饼图\n    drawPie () {\n      // 基于准备好的dom，初始化echarts实例\n      let myChart = this.$echarts.init(document.getElementById('img2'))\n      //初始化一个 ECharts 实例，并指定要显示的 DOM 元素\n      myChart.setOption({//设置图表的标题、提示框、图例和数据等。\n        title: {\n          text: '考试次数占比',\n          subtext: 'dashbord2',\n          x: 'center'\n        },\n        tooltip: {//tooltip 属性表示鼠标悬停在图表上时显示的提示框\n          trigger: 'item',\n          formatter: '{a} <br/>{b} : {c}次 ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          data: this.pieData\n        },\n        series: [\n          {\n            name: '考试次数',\n            type: 'pie',\n            radius: '55%',\n            data: this.pieData,\n            roseType: 'angle',\n            itemStyle: {\n              normal: {\n                shadowBlur: 200,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }\n        ]\n      })\n    },\n    //通过率的折线图 给折线图填充颜色，从而形成面积图\n    drawBrokenLine () {\n      //初始化ehcharts实例\n      let myChart = this.$echarts.init(document.getElementById('img3'))\n      //指定图表的配置项和数据\n      var option = {\n        //标题\n        title: {\n          text: '考试通过率折线图',\n          x: 'center'\n        },\n        //x轴\n        xAxis: {\n          data: this.examNames\n        },\n        //y轴没有显式设置，根据值自动生成y轴\n        yAxis: {},\n        //数据-data是最终要显示的数据\n        series: [{\n          name: '通过率',\n          type: 'line',\n          areaStyle: {\n            normal: {}\n          },\n          data: this.passRate\n        }],\n      }\n      //使用刚刚指定的配置项和数据项显示图表\n      myChart.setOption(option)\n    },\n    drawImg4 () {  //去掉x轴两端的留白。\n      let myChart = this.$echarts.init(document.getElementById('img4'))\n      myChart.setOption({\n        color: ['#cd5c5c'],\n        textStyle: {\n          color: 'black'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          },\n          formatter: '{a} <br/>{b} : {c}'\n        },\n\n        grid: {\n          containLabel: true\n        },\n        xAxis: {\n          type: 'value',\n          boundaryGap: [0, 0.01],\n          axisLine: {\n            lineStyle: {\n              color: '#fff'\n            },\n          },\n          'axisLabel': {\n            'interval': 0,\n            fontSize: 18,\n            formatter: '{value}',\n          }\n        },\n        yAxis: {\n          axisLine: {\n            lineStyle: {\n              color: '#fff'\n            },\n          },\n          'axisLabel': {\n            'interval': 0,\n            fontSize: 18,\n          },\n          type: 'category',\n          data: this.examNames\n        },\n        series: [{\n          name: '通过率：',\n          type: 'bar',\n          data: this.passRate,\n        }]\n      })\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n\n.el-container {\n  width: 100%;\n  height: 100%;\n}\n\n.el-container {\n  animation: leftMoveIn .7s ease-in;\n}\n\n@keyframes leftMoveIn {\n  0% {\n    transform: translateX(-100%);\n    opacity: 0;\n  }\n  100% {\n    transform: translateX(0%);\n    opacity: 1;\n  }\n}\n</style>\n"],"mappings":";AAiBA,OAAAA,SAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACA;MACAC,SAAA;MACA;MACAC,QAAA;MACA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA;IACA,KAAAC,OAAA,QAAAC,QAAA,CAAAC,OAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,OAAA;IACA;IACA,KAAAC,eAAA;IACA,KAAAC,cAAA;EACA;EACAC,OAAA;IACA,MAAAF,gBAAA;MACA,MAAAd,SAAA,CAAAc,eAAA,GAAAG,IAAA,CAAAC,IAAA;QACA,IAAAA,IAAA,CAAAC,IAAA;UACA,KAAAhB,SAAA,GAAAe,IAAA,CAAAhB,IAAA,IAAAkB,KAAA;UACA,KAAAhB,QAAA,GAAAc,IAAA,CAAAhB,IAAA,IAAAkB,KAAA;UACA,KAAAC,QAAA;UACA,KAAAC,cAAA;UACA,KAAAC,QAAA;UACA,KAAAhB,OAAA,CAAAiB,KAAA;QACA;MACA;IACA;IACA;IACAH,SAAA;MACA;MACA,IAAAI,OAAA,QAAAC,QAAA,CAAAC,IAAA,CAAAC,QAAA,CAAAC,cAAA;MACA;MACAJ,OAAA,CAAAK,SAAA;QACAC,KAAA;UACAnB,IAAA;UACAoB,OAAA;UACAC,CAAA;UACAC,CAAA;UACAC,SAAA;QACA;QACAC,OAAA;QACAC,KAAA;UACAnC,IAAA,OAAAC;QACA;QACAmC,KAAA;QACAC,MAAA;UACAtC,IAAA;UACAuC,IAAA;UACAtC,IAAA,OAAAE;QACA;MACA;IACA;IACA;IACA,MAAAW,eAAA;MACA,MAAAf,SAAA,CAAAe,cAAA,GAAAE,IAAA,CAAAC,IAAA;QACAuB,OAAA,CAAAC,GAAA,CAAAxB,IAAA;QACA,IAAAf,SAAA,GAAAe,IAAA,CAAAhB,IAAA,IAAAkB,KAAA;QACA,IAAAuB,WAAA,GAAAzB,IAAA,CAAAhB,IAAA,IAAAkB,KAAA;QACAjB,SAAA,CAAAyC,OAAA,EAAAC,IAAA,EAAAC,KAAA;UACA,KAAAzC,OAAA,CAAA0C,IAAA;YACA9C,IAAA,EAAA4C,IAAA;YACAG,KAAA,EAAAC,QAAA,CAAAN,WAAA,CAAAG,KAAA;UACA;QACA;QACA,KAAAI,OAAA;MACA;IACA;IACA;IACA;IACAA,QAAA;MACA;MACA,IAAAzB,OAAA,QAAAC,QAAA,CAAAC,IAAA,CAAAC,QAAA,CAAAC,cAAA;MACA;MACAJ,OAAA,CAAAK,SAAA;QAAA;QACAC,KAAA;UACAnB,IAAA;UACAoB,OAAA;UACAC,CAAA;QACA;QACAG,OAAA;UAAA;UACAe,OAAA;UACAC,SAAA;QACA;QACAC,MAAA;UACAC,MAAA;UACAC,IAAA;UACArD,IAAA,OAAAG;QACA;QACAkC,MAAA,GACA;UACAtC,IAAA;UACAuC,IAAA;UACAgB,MAAA;UACAtD,IAAA,OAAAG,OAAA;UACAoD,QAAA;UACAC,SAAA;YACAC,MAAA;cACAC,UAAA;cACAC,WAAA;YACA;UACA;QACA;MAEA;IACA;IACA;IACAvC,eAAA;MACA;MACA,IAAAG,OAAA,QAAAC,QAAA,CAAAC,IAAA,CAAAC,QAAA,CAAAC,cAAA;MACA;MACA,IAAAiC,MAAA;QACA;QACA/B,KAAA;UACAnB,IAAA;UACAqB,CAAA;QACA;QACA;QACAI,KAAA;UACAnC,IAAA,OAAAC;QACA;QACA;QACAmC,KAAA;QACA;QACAC,MAAA;UACAtC,IAAA;UACAuC,IAAA;UACAuB,SAAA;YACAJ,MAAA;UACA;UACAzD,IAAA,OAAAE;QACA;MACA;MACA;MACAqB,OAAA,CAAAK,SAAA,CAAAgC,MAAA;IACA;IACAvC,SAAA;MAAA;MACA,IAAAE,OAAA,QAAAC,QAAA,CAAAC,IAAA,CAAAC,QAAA,CAAAC,cAAA;MACAJ,OAAA,CAAAK,SAAA;QACAkC,KAAA;QACAC,SAAA;UACAD,KAAA;QACA;QACA5B,OAAA;UACAe,OAAA;UACAe,WAAA;YACA1B,IAAA;UACA;UACAY,SAAA;QACA;QAEAe,IAAA;UACAC,YAAA;QACA;QACA/B,KAAA;UACAG,IAAA;UACA6B,WAAA;UACAC,QAAA;YACAC,SAAA;cACAP,KAAA;YACA;UACA;UACA;YACA;YACAQ,QAAA;YACApB,SAAA;UACA;QACA;QACAd,KAAA;UACAgC,QAAA;YACAC,SAAA;cACAP,KAAA;YACA;UACA;UACA;YACA;YACAQ,QAAA;UACA;UACAhC,IAAA;UACAtC,IAAA,OAAAC;QACA;QACAoC,MAAA;UACAtC,IAAA;UACAuC,IAAA;UACAtC,IAAA,OAAAE;QACA;MACA;IACA;EACA;AACA"}]}