{"remainingRequest":"D:\\BaiduDownload\\projectmass\\exam_system-master\\exam-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\BaiduDownload\\projectmass\\exam_system-master\\exam-vue\\src\\views\\teacher\\StatisticOverview.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\BaiduDownload\\projectmass\\exam_system-master\\exam-vue\\src\\views\\teacher\\StatisticOverview.vue","mtime":1682044119000},{"path":"D:\\BaiduDownload\\projectmass\\exam_system-master\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686540617114},{"path":"D:\\BaiduDownload\\projectmass\\exam_system-master\\exam-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1686540617613},{"path":"D:\\BaiduDownload\\projectmass\\exam_system-master\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686540617114},{"path":"D:\\BaiduDownload\\projectmass\\exam_system-master\\exam-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1686540616128}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBzdGF0aXN0aWMgZnJvbSAnQC9hcGkvc3RhdGlzdGljJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTdGF0aXN0aWNPdmVydmlldycsCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICAvL+iAg+ivleWQjeensAogICAgICBleGFtTmFtZXM6IFtdLAogICAgICAvL+iAg+ivlemAmui/h+eOhwogICAgICBwYXNzUmF0ZTogW10sCiAgICAgIC8v6aW85Zu+55qE5pWw5o2uCiAgICAgIHBpZURhdGE6IFtdLAogICAgfQogIH0sCiAgY3JlYXRlZCAoKSB7CiAgICAvL+mhtemdouaVsOaNruWKoOi9veeahOetieW+heeKtuaAgeagjwogICAgdGhpcy5sb2FkaW5nID0gdGhpcy4kTG9hZGluZy5zZXJ2aWNlKHsKICAgICAgYm9keTogdHJ1ZSwKICAgICAgbG9jazogdHJ1ZSwKICAgICAgdGV4dDogJ+aVsOaNruaLvOWRveWKoOi9veS4rSwoKuKVueKWveKVuSopJywKICAgICAgc3Bpbm5lcjogJ2VsLWljb24tbG9hZGluZycsCiAgICB9KQogICAgdGhpcy5nZXRFeGFtUGFzc1JhdGUoKQogICAgdGhpcy5nZXRFeGFtTnVtYmVycygpCiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBnZXRFeGFtUGFzc1JhdGUgKCkgewogICAgICBhd2FpdCBzdGF0aXN0aWMuZ2V0RXhhbVBhc3NSYXRlKCkudGhlbigocmVzcCkgPT4gewogICAgICAgIGlmIChyZXNwLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgdGhpcy5leGFtTmFtZXMgPSByZXNwLmRhdGFbMF0uc3BsaXQoJywnKQogICAgICAgICAgdGhpcy5wYXNzUmF0ZSA9IHJlc3AuZGF0YVsxXS5zcGxpdCgnLCcpCiAgICAgICAgICB0aGlzLmRyYXdMaW5lKCkKICAgICAgICAgIHRoaXMuZHJhd0Jyb2tlbkxpbmUoKQogICAgICAgICAgdGhpcy5kcmF3SW1nNCgpCiAgICAgICAgICB0aGlzLmxvYWRpbmcuY2xvc2UoKQogICAgICAgIH0KICAgICAgfSkKICAgIH0sCiAgICAvL+iAg+ivlemAmui/h+eOh+afseeKtuWbvgogICAgZHJhd0xpbmUgKCkgewogICAgICAvLyDln7rkuo7lh4blpIflpb3nmoRkb23vvIzliJ3lp4vljJZlY2hhcnRz5a6e5L6LCiAgICAgIGxldCBteUNoYXJ0ID0gdGhpcy4kZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbWcxJykpCiAgICAgIC8vIOe7mOWItuWbvuihqAogICAgICBteUNoYXJ0LnNldE9wdGlvbih7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICfogIPor5XpgJrov4fnjocnLAogICAgICAgICAgc3VidGV4dDogJ2Rhc2hib3JkMScsCiAgICAgICAgICB4OiAnY2VudGVyJywKICAgICAgICAgIHk6ICd0b3AnLAogICAgICAgICAgdGV4dEFsaWduOiAnY2VudGVyJwogICAgICAgIH0sCiAgICAgICAgdG9vbHRpcDoge30sCiAgICAgICAgeEF4aXM6IHsKICAgICAgICAgIGRhdGE6IHRoaXMuZXhhbU5hbWVzCiAgICAgICAgfSwKICAgICAgICB5QXhpczoge30sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgbmFtZTogJ+mAmui/h+eOhycsCiAgICAgICAgICB0eXBlOiAnYmFyJywKICAgICAgICAgIGRhdGE6IHRoaXMucGFzc1JhdGUKICAgICAgICB9XQogICAgICB9KQogICAgfSwKICAgIC8v6I635Y+W6ICD6K+V5qyh5pWw5pWw5o2uCiAgICBhc3luYyBnZXRFeGFtTnVtYmVycyAoKSB7CiAgICAgIGF3YWl0IHN0YXRpc3RpYy5nZXRFeGFtTnVtYmVycygpLnRoZW4oKHJlc3ApID0+IHsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwKQogICAgICAgIGxldCBleGFtTmFtZXMgPSByZXNwLmRhdGFbMF0uc3BsaXQoJywnKQogICAgICAgIGxldCBleGFtTnVtYmVycyA9IHJlc3AuZGF0YVsxXS5zcGxpdCgnLCcpCiAgICAgICAgZXhhbU5hbWVzLmZvckVhY2goKGl0ZW0sIGluZGV4KSA9PiB7CiAgICAgICAgICB0aGlzLnBpZURhdGEucHVzaCh7CiAgICAgICAgICAgIG5hbWU6IGl0ZW0sCiAgICAgICAgICAgIHZhbHVlOiBwYXJzZUludChleGFtTnVtYmVyc1tpbmRleF0pCiAgICAgICAgICB9KQogICAgICAgIH0pCiAgICAgICAgdGhpcy5kcmF3UGllKCkKICAgICAgfSkKICAgIH0sCiAgICAvL+iAg+ivleasoeaVsOmlvOWbvgogICAgZHJhd1BpZSAoKSB7CiAgICAgIC8vIOWfuuS6juWHhuWkh+WlveeahGRvbe+8jOWIneWni+WMlmVjaGFydHPlrp7kvosKICAgICAgbGV0IG15Q2hhcnQgPSB0aGlzLiRlY2hhcnRzLmluaXQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ltZzInKSkKICAgICAgbXlDaGFydC5zZXRPcHRpb24oewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0OiAn6ICD6K+V5qyh5pWw5Y2g5q+UJywKICAgICAgICAgIHN1YnRleHQ6ICdkYXNoYm9yZDInLAogICAgICAgICAgeDogJ2NlbnRlcicKICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHRyaWdnZXI6ICdpdGVtJywKICAgICAgICAgIGZvcm1hdHRlcjogJ3thfSA8YnIvPntifSA6IHtjfeasoSAoe2R9JSknCiAgICAgICAgfSwKICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgIG9yaWVudDogJ3ZlcnRpY2FsJywKICAgICAgICAgIGxlZnQ6ICdsZWZ0JywKICAgICAgICAgIGRhdGE6IHRoaXMucGllRGF0YQogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIG5hbWU6ICfogIPor5XmrKHmlbAnLAogICAgICAgICAgICB0eXBlOiAncGllJywKICAgICAgICAgICAgcmFkaXVzOiAnNTUlJywKICAgICAgICAgICAgZGF0YTogdGhpcy5waWVEYXRhLAogICAgICAgICAgICByb3NlVHlwZTogJ2FuZ2xlJywKICAgICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgICAgbm9ybWFsOiB7CiAgICAgICAgICAgICAgICBzaGFkb3dCbHVyOiAyMDAsCiAgICAgICAgICAgICAgICBzaGFkb3dDb2xvcjogJ3JnYmEoMCwgMCwgMCwgMC41KScKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0pCiAgICB9LAogICAgLy/pgJrov4fnjofnmoTmipjnur/lm74KICAgIGRyYXdCcm9rZW5MaW5lICgpIHsKICAgICAgLy/liJ3lp4vljJZlaGNoYXJ0c+WunuS+iwogICAgICBsZXQgbXlDaGFydCA9IHRoaXMuJGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW1nMycpKQogICAgICAvL+aMh+WumuWbvuihqOeahOmFjee9rumhueWSjOaVsOaNrgogICAgICB2YXIgb3B0aW9uID0gewogICAgICAgIC8v5qCH6aKYCiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICfogIPor5XpgJrov4fnjofmipjnur/lm74nLAogICAgICAgICAgeDogJ2NlbnRlcicKICAgICAgICB9LAogICAgICAgIC8veOi9tAogICAgICAgIHhBeGlzOiB7CiAgICAgICAgICBkYXRhOiB0aGlzLmV4YW1OYW1lcwogICAgICAgIH0sCiAgICAgICAgLy956L205rKh5pyJ5pi+5byP6K6+572u77yM5qC55o2u5YC86Ieq5Yqo55Sf5oiQeei9tAogICAgICAgIHlBeGlzOiB7fSwKICAgICAgICAvL+aVsOaNri1kYXRh5piv5pyA57uI6KaB5pi+56S655qE5pWw5o2uCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgbmFtZTogJ+mAmui/h+eOhycsCiAgICAgICAgICB0eXBlOiAnbGluZScsCiAgICAgICAgICBhcmVhU3R5bGU6IHsKICAgICAgICAgICAgbm9ybWFsOiB7fQogICAgICAgICAgfSwKICAgICAgICAgIGRhdGE6IHRoaXMucGFzc1JhdGUKICAgICAgICB9XSwKICAgICAgfQogICAgICAvL+S9v+eUqOWImuWImuaMh+WumueahOmFjee9rumhueWSjOaVsOaNrumhueaYvuekuuWbvuihqAogICAgICBteUNoYXJ0LnNldE9wdGlvbihvcHRpb24pCiAgICB9LAogICAgZHJhd0ltZzQgKCkgewogICAgICBsZXQgbXlDaGFydCA9IHRoaXMuJGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW1nNCcpKQogICAgICBteUNoYXJ0LnNldE9wdGlvbih7CiAgICAgICAgY29sb3I6IFsnI2NkNWM1YyddLAogICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgY29sb3I6ICdibGFjaycKICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHRyaWdnZXI6ICdheGlzJywKICAgICAgICAgIGF4aXNQb2ludGVyOiB7CiAgICAgICAgICAgIHR5cGU6ICdzaGFkb3cnCiAgICAgICAgICB9LAogICAgICAgICAgZm9ybWF0dGVyOiAne2F9IDxici8+e2J9IDoge2N9JwogICAgICAgIH0sCgogICAgICAgIGdyaWQ6IHsKICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgeEF4aXM6IHsKICAgICAgICAgIHR5cGU6ICd2YWx1ZScsCiAgICAgICAgICBib3VuZGFyeUdhcDogWzAsIDAuMDFdLAogICAgICAgICAgYXhpc0xpbmU6IHsKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjZmZmJwogICAgICAgICAgICB9LAogICAgICAgICAgfSwKICAgICAgICAgICdheGlzTGFiZWwnOiB7CiAgICAgICAgICAgICdpbnRlcnZhbCc6IDAsCiAgICAgICAgICAgIGZvbnRTaXplOiAxOCwKICAgICAgICAgICAgZm9ybWF0dGVyOiAne3ZhbHVlfScsCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB5QXhpczogewogICAgICAgICAgYXhpc0xpbmU6IHsKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjZmZmJwogICAgICAgICAgICB9LAogICAgICAgICAgfSwKICAgICAgICAgICdheGlzTGFiZWwnOiB7CiAgICAgICAgICAgICdpbnRlcnZhbCc6IDAsCiAgICAgICAgICAgIGZvbnRTaXplOiAxOCwKICAgICAgICAgIH0sCiAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLAogICAgICAgICAgZGF0YTogdGhpcy5leGFtTmFtZXMKICAgICAgICB9LAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIG5hbWU6ICfpgJrov4fnjofvvJonLAogICAgICAgICAgdHlwZTogJ2JhcicsCiAgICAgICAgICBkYXRhOiB0aGlzLnBhc3NSYXRlLAogICAgICAgIH1dCiAgICAgIH0pCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["StatisticOverview.vue"],"names":[],"mappings":";AAifile":"StatisticOverview.vue","sourceRoot":"src/views/teacher","sourcesContent":["<template>\n  <el-container>\n\n      <el-row>\n        <div id=\"img1\" style=\"width: 800px;height:400px;\"></div>\n        <div id=\"img2\" style=\"width: 800px;height:400px;\"></div>\n      </el-row>\n\n      <el-row>\n        <div id=\"img3\" style=\"width: 800px;height:400px;\"></div>\n        <div id=\"img4\" style=\"width: 800px;height:400px;\"></div>\n      </el-row>\n\n  </el-container>\n</template>\n\n<script>\nimport statistic from '@/api/statistic'\n\nexport default {\n  name: 'StatisticOverview',\n  data () {\n    return {\n      //考试名称\n      examNames: [],\n      //考试通过率\n      passRate: [],\n      //饼图的数据\n      pieData: [],\n    }\n  },\n  created () {\n    //页面数据加载的等待状态栏\n    this.loading = this.$Loading.service({\n      body: true,\n      lock: true,\n      text: '数据拼命加载中,(*╹▽╹*)',\n      spinner: 'el-icon-loading',\n    })\n    this.getExamPassRate()\n    this.getExamNumbers()\n  },\n  methods: {\n    async getExamPassRate () {\n      await statistic.getExamPassRate().then((resp) => {\n        if (resp.code === 200) {\n          this.examNames = resp.data[0].split(',')\n          this.passRate = resp.data[1].split(',')\n          this.drawLine()\n          this.drawBrokenLine()\n          this.drawImg4()\n          this.loading.close()\n        }\n      })\n    },\n    //考试通过率柱状图\n    drawLine () {\n      // 基于准备好的dom，初始化echarts实例\n      let myChart = this.$echarts.init(document.getElementById('img1'))\n      // 绘制图表\n      myChart.setOption({\n        title: {\n          text: '考试通过率',\n          subtext: 'dashbord1',\n          x: 'center',\n          y: 'top',\n          textAlign: 'center'\n        },\n        tooltip: {},\n        xAxis: {\n          data: this.examNames\n        },\n        yAxis: {},\n        series: [{\n          name: '通过率',\n          type: 'bar',\n          data: this.passRate\n        }]\n      })\n    },\n    //获取考试次数数据\n    async getExamNumbers () {\n      await statistic.getExamNumbers().then((resp) => {\n        console.log(resp)\n        let examNames = resp.data[0].split(',')\n        let examNumbers = resp.data[1].split(',')\n        examNames.forEach((item, index) => {\n          this.pieData.push({\n            name: item,\n            value: parseInt(examNumbers[index])\n          })\n        })\n        this.drawPie()\n      })\n    },\n    //考试次数饼图\n    drawPie () {\n      // 基于准备好的dom，初始化echarts实例\n      let myChart = this.$echarts.init(document.getElementById('img2'))\n      myChart.setOption({\n        title: {\n          text: '考试次数占比',\n          subtext: 'dashbord2',\n          x: 'center'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b} : {c}次 ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          data: this.pieData\n        },\n        series: [\n          {\n            name: '考试次数',\n            type: 'pie',\n            radius: '55%',\n            data: this.pieData,\n            roseType: 'angle',\n            itemStyle: {\n              normal: {\n                shadowBlur: 200,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }\n        ]\n      })\n    },\n    //通过率的折线图\n    drawBrokenLine () {\n      //初始化ehcharts实例\n      let myChart = this.$echarts.init(document.getElementById('img3'))\n      //指定图表的配置项和数据\n      var option = {\n        //标题\n        title: {\n          text: '考试通过率折线图',\n          x: 'center'\n        },\n        //x轴\n        xAxis: {\n          data: this.examNames\n        },\n        //y轴没有显式设置，根据值自动生成y轴\n        yAxis: {},\n        //数据-data是最终要显示的数据\n        series: [{\n          name: '通过率',\n          type: 'line',\n          areaStyle: {\n            normal: {}\n          },\n          data: this.passRate\n        }],\n      }\n      //使用刚刚指定的配置项和数据项显示图表\n      myChart.setOption(option)\n    },\n    drawImg4 () {\n      let myChart = this.$echarts.init(document.getElementById('img4'))\n      myChart.setOption({\n        color: ['#cd5c5c'],\n        textStyle: {\n          color: 'black'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          },\n          formatter: '{a} <br/>{b} : {c}'\n        },\n\n        grid: {\n          containLabel: true\n        },\n        xAxis: {\n          type: 'value',\n          boundaryGap: [0, 0.01],\n          axisLine: {\n            lineStyle: {\n              color: '#fff'\n            },\n          },\n          'axisLabel': {\n            'interval': 0,\n            fontSize: 18,\n            formatter: '{value}',\n          }\n        },\n        yAxis: {\n          axisLine: {\n            lineStyle: {\n              color: '#fff'\n            },\n          },\n          'axisLabel': {\n            'interval': 0,\n            fontSize: 18,\n          },\n          type: 'category',\n          data: this.examNames\n        },\n        series: [{\n          name: '通过率：',\n          type: 'bar',\n          data: this.passRate,\n        }]\n      })\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n\n.el-container {\n  width: 100%;\n  height: 100%;\n}\n\n.el-container {\n  animation: leftMoveIn .7s ease-in;\n}\n\n@keyframes leftMoveIn {\n  0% {\n    transform: translateX(-100%);\n    opacity: 0;\n  }\n  100% {\n    transform: translateX(0%);\n    opacity: 1;\n  }\n}\n</style>\n"]}]}