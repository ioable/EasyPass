{"remainingRequest":"D:\\WEB\\EasyPass在线考试系统\\EasyPassSystem\\exam-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WEB\\EasyPass在线考试系统\\EasyPassSystem\\exam-vue\\src\\views\\teacher\\AddExam.vue?vue&type=style&index=0&id=61524b2e&scoped=true&lang=scss&","dependencies":[{"path":"D:\\WEB\\EasyPass在线考试系统\\EasyPassSystem\\exam-vue\\src\\views\\teacher\\AddExam.vue","mtime":1682044119000},{"path":"D:\\WEB\\EasyPass在线考试系统\\EasyPassSystem\\exam-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1686540615826},{"path":"D:\\WEB\\EasyPass在线考试系统\\EasyPassSystem\\exam-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1686540617334},{"path":"D:\\WEB\\EasyPass在线考试系统\\EasyPassSystem\\exam-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1686540615808},{"path":"D:\\WEB\\EasyPass在线考试系统\\EasyPassSystem\\exam-vue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1686540610040},{"path":"D:\\WEB\\EasyPass在线考试系统\\EasyPassSystem\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686540617114},{"path":"D:\\WEB\\EasyPass在线考试系统\\EasyPassSystem\\exam-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1686540616128}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgIi4uLy4uL2Fzc2V0cy9jc3MvdGVhY2hlci9hZGRFeGFtIjsK"},{"version":3,"sources":["AddExam.vue"],"names":[],"mappings":";AAklBA","file":"AddExam.vue","sourceRoot":"src/views/teacher","sourcesContent":["<template>\n  <el-container>\n    <el-header height=\"220\">\n      <el-steps :active=\"curStep\" simple>\n        <el-step title=\"组卷配置\" icon=\"el-icon-edit\"></el-step>\n        <el-step title=\"考试权限\" icon=\"el-icon-lock\"></el-step>\n        <el-step title=\"补充配置\" icon=\"el-icon-setting\"></el-step>\n      </el-steps>\n\n      <el-button style=\"margin-top: 10px\" v-show=\"curStep !== 1\" @click=\"curStep--\">上一步</el-button>\n\n      <el-button style=\"float:right;margin-top: 10px\" v-show=\"curStep !== 3\" type=\"primary\" @click=\"curStep++\">下一步\n      </el-button>\n      <el-button style=\"float:right;margin-top: 10px\" v-show=\"curStep === 3\" type=\"primary\" @click=\"addExam\">提交\n      </el-button>\n    </el-header>\n\n    <el-main>\n      <!--设置试题信息-->\n      <el-card v-show=\"curStep === 1\">\n\n        <el-radio-group v-model=\"makeModel\"\n                        @change=\"makeModelChange\"\n                        size=\"medium\">\n          <el-radio :label=\"1\" border>题库组卷</el-radio>\n          <el-radio :label=\"2\" border>自由组卷</el-radio>\n        </el-radio-group>\n\n        <span style=\"float: right;color: red;font-weight: bold\" v-show=\"makeModel === 2\">\n          {{ '试卷总分：' + sumTotalScore }}</span>\n\n        <!-- 题库组卷内容-->\n        <div v-show=\"makeModel === 1\" style=\"margin-top: 25px\">\n          <el-button icon=\"el-icon-plus\" size=\"mini\" @click=\"addBank\">添加题库</el-button>\n\n          <!--存放题目的信息-->\n          <el-table :data=\"addExamQuestion\" border style=\"margin-top: 10px\">\n\n            <el-table-column label=\"题库\" width=\"155\" align=\"center\">\n              <template slot-scope=\"scope\">\n                <el-select clearable v-model=\"scope.row.bankName\" placeholder=\"请选择题库\"\n                           style=\"margin-left: 5px\">\n                  <el-option\n                    v-for=\"item in allBank\"\n                    :key=\"item.questionBank.bankId\"\n                    :label=\"item.questionBank.bankName\"\n                    :value=\"item.questionBank.bankName\">\n                  </el-option>\n                </el-select>\n              </template>\n            </el-table-column>\n\n            <el-table-column label=\"单选题分数\" align=\"center\">\n              <template slot-scope=\"scope\">\n                <el-input v-model=\"scope.row.singleScore\" style=\"margin-left: 5px\"></el-input>\n              </template>\n            </el-table-column>\n\n            <el-table-column label=\"多选题分数\" align=\"center\">\n              <template slot-scope=\"scope\">\n                <el-input v-model=\"scope.row.multipleScore\" style=\"margin-left: 5px\"></el-input>\n              </template>\n            </el-table-column>\n\n            <el-table-column label=\"判断题分数\" align=\"center\">\n              <template slot-scope=\"scope\">\n                <el-input v-model=\"scope.row.judgeScore\" style=\"margin-left: 5px\"></el-input>\n              </template>\n            </el-table-column>\n\n            <el-table-column label=\"简答题分数\" align=\"center\">\n              <template slot-scope=\"scope\">\n                <el-input v-model=\"scope.row.shortScore\" style=\"margin-left: 5px\"></el-input>\n              </template>\n            </el-table-column>\n\n            <el-table-column label=\"操作\" width=\"80\" align=\"center\">\n              <template slot-scope=\"scope\">\n                <el-button type=\"danger\" icon=\"el-icon-delete\" circle @click=\"delBank(scope.row.bankId)\"></el-button>\n              </template>\n            </el-table-column>\n\n          </el-table>\n        </div>\n\n        <!-- 自由组卷内容-->\n        <div v-show=\"makeModel === 2\">\n          <el-card>\n            <h1>题目列表</h1>\n            <el-button type=\"primary\" icon=\"el-icon-plus\" size=\"small\" @click=\"showAddDialog\">添加试题</el-button>\n\n            <el-table :data=\"addExamQuestion2\" border style=\"margin-top: 10px\">\n\n              <el-table-column\n                type=\"index\"\n                label=\"序号\"\n                width=\"50\">\n              </el-table-column>\n\n              <el-table-column label=\"题目内容\" align=\"center\">\n                <template slot-scope=\"scope\">\n                  {{ scope.row.questionContent }}\n                </template>\n              </el-table-column>\n\n              <el-table-column align=\"center\"\n                               label=\"题目类型\">\n                <template slot-scope=\"scope\">\n                  <span v-if=\"scope.row.questionType === 1\">单选题</span>\n                  <span v-else-if=\"scope.row.questionType === 2\">多选题</span>\n                  <span v-else-if=\"scope.row.questionType === 3\">判断题</span>\n                  <span v-else-if=\"scope.row.questionType === 4\">简答题</span>\n                </template>\n              </el-table-column>\n\n              <el-table-column label=\"单题分数\" align=\"center\">\n                <template slot-scope=\"scope\">\n                  <el-input v-model=\"scope.row.score\" style=\"margin-left: 5px\"></el-input>\n                </template>\n              </el-table-column>\n\n              <el-table-column label=\"操作\" width=\"80\" align=\"center\">\n                <template slot-scope=\"scope\">\n                  <el-button type=\"danger\" icon=\"el-icon-delete\" circle\n                             @click=\"delQuestion(scope.row.questionId)\"></el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n\n          </el-card>\n        </div>\n      </el-card>\n\n      <!--设置考试权限-->\n      <el-card v-show=\"curStep === 2\">\n        <el-radio-group v-model=\"examAuthority\" size=\"medium\">\n          <el-radio :label=\"1\" border>完全公开</el-radio>\n          <el-radio :label=\"2\" border>需要密码</el-radio>\n        </el-radio-group>\n\n        <el-alert style=\"margin-top: 15px\"\n                  :title=\"examAuthority === 1? '开放的，任何人都可以进行考试！' : '半开放的，知道密码的人员才可以考试！'\"\n                  type=\"warning\">\n        </el-alert>\n\n        <el-input style=\"margin-top: 15px;width: 20%\" v-model=\"examPassword\" v-show=\"examAuthority === 2\"\n                  type=\"password\" show-password placeholder=\"输入考试密码\"></el-input>\n      </el-card>\n\n      <!--设置考试信息-->\n      <el-card v-show=\"curStep === 3\">\n\n        <el-form :model=\"examInfo\" :rules=\"examInfoRules\" ref=\"examInfoForm\" label-width=\"100px\">\n\n          <el-form-item label=\"考试名称\" prop=\"examName\">\n            <el-input v-model=\"examInfo.examName\"></el-input>\n          </el-form-item>\n\n          <el-form-item label=\"考试描述\" prop=\"examDesc\">\n            <el-input v-model=\"examInfo.examDesc\"></el-input>\n          </el-form-item>\n\n          <el-form-item v-show=\"makeModel === 2\" label=\"总分数\" prop=\"totalScore\">\n            <el-input-number :value=\"sumTotalScore\" :disabled=\"true\"></el-input-number>\n          </el-form-item>\n\n          <el-form-item label=\"及格分数\" prop=\"passScore\">\n            <el-input-number v-model=\"examInfo.passScore\" :min=\"1\" :max=\"parseInt(sumTotalScore)\"></el-input-number>\n          </el-form-item>\n\n          <el-form-item label=\"考试时长(分钟)\" prop=\"examDuration\">\n            <el-input-number v-model=\"examInfo.examDuration\" :min=\"1\" :max=\"120\"></el-input-number>\n          </el-form-item>\n\n          <el-form-item label=\"考试开始时间\" prop=\"startTime\">\n            <el-date-picker style=\"margin-left: 5px\"\n                            v-model=\"examInfo.startTime\"\n                            type=\"date\" placeholder=\"考试开始时间\">\n            </el-date-picker>\n          </el-form-item>\n\n          <el-form-item label=\"考试结束时间\" prop=\"endTime\">\n            <el-date-picker style=\"margin-left: 5px\"\n                            v-model=\"examInfo.endTime\"\n                            type=\"date\" placeholder=\"考试结束时间\">\n            </el-date-picker>\n          </el-form-item>\n\n        </el-form>\n\n      </el-card>\n    </el-main>\n\n    <el-dialog title=\"添加题目\" :visible.sync=\"showQuestionDialog\" width=\"80%\" center>\n      <el-row>\n        <el-select @change=\"typeChange\" clearable v-model=\"queryInfo.questionType\" placeholder=\"请选择题目类型\">\n          <el-option\n            v-for=\"item in questionType\"\n            :key=\"item.id\"\n            :label=\"item.name\"\n            :value=\"item.id\">\n          </el-option>\n        </el-select>\n\n        <el-select @change=\"bankChange\" clearable v-model=\"queryInfo.questionBank\" placeholder=\"请选择题库\"\n                   style=\"margin-left: 5px\">\n          <el-option\n            v-for=\"item in allBank\"\n            :key=\"item.questionBank.bankId\"\n            :label=\"item.questionBank.bankName\"\n            :value=\"item.questionBank.bankName\">\n          </el-option>\n        </el-select>\n\n        <el-input v-model=\"queryInfo.questionContent\" @blur=\"getQuestionInfo\" placeholder=\"题目内容\"\n                  style=\"margin-left: 5px;width: 220px\"\n                  prefix-icon=\"el-icon-search\"></el-input>\n        <el-button type=\"primary\" @click=\"addQuToFree\" style=\"float: right\">确认{{ selectedTable.length }}项</el-button>\n      </el-row>\n\n      <el-table\n        ref=\"questionTable\"\n        highlight-current-row\n        v-loading=\"loading\"\n        :border=\"true\"\n        :data=\"questionInfo\"\n        tooltip-effect=\"dark\"\n        style=\"width: 100%;margin-top: 25px;\" @selection-change=\"handleTableSectionChange\">\n\n        <el-table-column align=\"center\"\n                         type=\"selection\"\n                         width=\"55\">\n        </el-table-column>\n\n        <el-table-column align=\"center\"\n                         label=\"题目类型\">\n          <template slot-scope=\"scope\">\n            <span v-if=\"scope.row.quType === 1\">单选题</span>\n            <span v-else-if=\"scope.row.quType === 2\">多选题</span>\n            <span v-else-if=\"scope.row.quType === 3\">判断题</span>\n            <span v-else-if=\"scope.row.quType === 4\">简答题</span>\n          </template>\n        </el-table-column>\n\n        <el-table-column align=\"center\" label=\"题目内容\">\n          <template slot-scope=\"scope\">\n            <span class=\"quContent\">{{ scope.row.quContent }}</span>\n          </template>\n        </el-table-column>\n\n        <el-table-column align=\"center\"\n                         label=\"难度\">\n          <template slot-scope=\"scope\">\n            <span v-if=\"scope.row.level === 1\">简单</span>\n            <span v-if=\"scope.row.level === 2\">中等</span>\n            <span v-if=\"scope.row.level === 3\">困难</span>\n          </template>\n        </el-table-column>\n\n        <el-table-column align=\"center\"\n                         prop=\"quBankName\"\n                         label=\"所属题库\">\n        </el-table-column>\n\n        <el-table-column align=\"center\"\n                         prop=\"createPerson\"\n                         label=\"创建人\">\n        </el-table-column>\n\n        <el-table-column align=\"center\"\n                         label=\"创建时间\">\n          <template slot-scope=\"scope\">\n            {{ scope.row.createTime }}\n          </template>\n        </el-table-column>\n\n\n      </el-table>\n      <!--分页-->\n      <el-pagination style=\"margin-top: 25px\"\n                     @size-change=\"handleSizeChange\"\n                     @current-change=\"handleCurrentChange\"\n                     :current-page=\"queryInfo.pageNo\"\n                     :page-sizes=\"[10, 20, 30, 50]\"\n                     :page-size=\"queryInfo.pageSize\"\n                     layout=\"total, sizes, prev, pager, next, jumper\"\n                     :total=\"total\">\n      </el-pagination>\n    </el-dialog>\n\n  </el-container>\n</template>\n\n<script>\nimport questionBankApi from '@/api/questionBank'\nimport question from '@/api/question'\nimport utils from '@/utils/utils'\nimport examApi from '@/api/exam'\n\nexport default {\n  name: 'AddExam',\n  data () {\n    return {\n      //查询题目的参数\n      queryInfo: {\n        //题目类型下拉款所选的内容\n        'questionType': '',\n        'questionBank': '',\n        'questionContent': '',\n        'pageNo': 1,\n        'pageSize': 10\n      },\n      //题目类型\n      questionType: [\n        {\n          id: 1,\n          name: '单选题',\n        },\n        {\n          id: 2,\n          name: '多选题',\n        },\n        {\n          id: 3,\n          name: '判断题',\n        },\n        {\n          id: 4,\n          name: '简答题',\n        },\n      ],\n      //当前的步骤\n      curStep: 1,\n      //组卷模式\n      makeModel: 1,\n      //添加考试题目信息(makeModel = 1的时候)\n      addExamQuestion: [],\n      //所有题库信息\n      allBank: [],\n      //添加考试题目信息(makeModel = 2 的时候)\n      addExamQuestion2: [],\n      //所有题目的对话框\n      showQuestionDialog: false,\n      //对话框中题目表格的加载\n      loading: true,\n      //所有题目的信息\n      questionInfo: [],\n      //所有题目的对话框中表格被选中\n      selectedTable: [],\n      //所有题目总数\n      total: 0,\n      //考试权限(1公开, 2密码)\n      examAuthority: 1,\n      //考试密码(权限为2时的密码)\n      examPassword: '',\n      //补充的考试信息\n      examInfo: {\n        'examId': '',\n        'examDesc': '',\n        'passScore': 0,\n        'examDuration': 0,\n        'startTime': '',\n        'endTime': ''\n      },\n      //补充的考试信息的表单验证\n      examInfoRules: {\n        examName: [\n          {\n            required: true,\n            message: '请输入考试名称',\n            trigger: 'blur'\n          }\n        ],\n        passScore: [\n          {\n            required: true,\n            message: '请输入通过分数',\n            trigger: 'blur'\n          }\n        ],\n        examDuration: [\n          {\n            required: true,\n            message: '请输入考试时长',\n            trigger: 'blur'\n          }\n        ],\n      },\n    }\n  },\n  props: ['tagInfo'],\n  created () {\n    //一创建就改变头部的面包屑\n    this.$emit('giveChildChangeBreakInfo', '添加考试', '添加考试')\n    this.createTagsInParent()\n    this.getBankInfo()\n  },\n  methods: {\n    //向父组件中添加头部的tags标签\n    createTagsInParent () {\n      let flag = false\n      this.tagInfo.map(item => {\n        //如果tags全部符合\n        if (item.name === '添加考试' && item.url === this.$route.path) {\n          flag = true\n        } else if (item.name === '添加考试' && item.url !== this.$route.path) {\n          this.$emit('updateTagInfo', '添加考试', this.$route.path)\n          flag = true\n        }\n      })\n      if (!flag) this.$emit('giveChildAddTag', '添加考试', this.$route.path)\n    },\n    //获取所有的题库信息\n    getBankInfo () {\n      questionBankApi.getBankHaveQuestionSumByType({\n          'pageNo': 1,\n          'pageSize': 9999\n        }).then((resp) => {\n        if (resp.code === 200) {\n          this.allBank = resp.data.data\n        } else {\n          this.$notify({\n            title: 'Tips',\n            message: resp.message,\n            type: 'error',\n            duration: 2000\n          })\n        }\n      })\n    },\n    //删除当前需要去除的题库\n    delBank (bankId) {\n      this.addExamQuestion.forEach((item, index) => {\n        if (item.bankId === bankId) this.addExamQuestion.splice(index, 1)\n      })\n    },\n    //添加题库组卷中的题库\n    addBank () {\n      this.addExamQuestion.push(\n        {\n          'bankName': '',\n          'singleScore': 1,\n          'multipleScore': 1,\n          'judgeScore': 1,\n          'shortScore': 1\n        })\n    },\n    //自由组卷时添加试题\n    showAddDialog () {\n      this.showQuestionDialog = true\n      this.getQuestionInfo()\n    },\n    //自由组卷时删除试题\n    delQuestion (questionId) {\n      this.addExamQuestion2.forEach((item, index) => {\n        if (item.questionId === questionId) this.addExamQuestion2.splice(index, 1)\n      })\n    },\n    //题目类型变化\n    typeChange (val) {\n      this.queryInfo.questionType = val\n      this.getQuestionInfo()\n    },\n    //题库变化\n    bankChange (val) {\n      this.queryInfo.questionBank = val\n      this.getQuestionInfo()\n    },\n    //获取题目信息\n    getQuestionInfo () {\n      question.getQuestion(this.queryInfo).then((resp) => {\n        if (resp.code === 200) {\n          this.questionInfo = resp.data.data\n          this.total = resp.data.total\n          this.loading = false\n        } else {\n          this.$notify({\n            title: 'Tips',\n            message: '获取题库信息失败',\n            type: 'error',\n            duration: 2000\n          })\n        }\n      })\n    },\n    //处理表格被选中\n    handleTableSectionChange (val) {\n      this.selectedTable = val\n    },\n    //分页页面大小改变\n    handleSizeChange (val) {\n      this.queryInfo.pageSize = val\n      this.getQuestionInfo()\n    },\n    //分页插件的页数\n    handleCurrentChange (val) {\n      this.queryInfo.pageNo = val\n      this.getQuestionInfo()\n    },\n    //自由组卷中选中的题目添加进去\n    addQuToFree () {\n      this.selectedTable.forEach(item => {\n        if (!this.addExamQuestion2.some(i2 => {\n          return i2.questionId === item.id\n        })) {//不存在有当前题目\n          this.addExamQuestion2.push({\n            'questionId': item.id,\n            'questionContent': item.quContent,\n            'questionType': item.quType,\n            'score': 1\n          })\n        }\n      })\n      this.showQuestionDialog = false\n    },\n    //组卷模式变化\n    makeModelChange () {\n      this.$confirm('此操作将丢失当前组卷数据, 是否继续?', 'Tips', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.makeModel === 1 ? this.addExamQuestion2 = [] : this.addExamQuestion = []\n      }).catch(() => {\n      })\n    },\n    //添加考试\n    addExam () {\n      utils.validFormAndInvoke(this.$refs['examInfoForm'], () => {\n        if (this.addExamQuestion.length !== 0 || this.addExamQuestion2.length !== 0) {\n          //构造数据对象(考试信息)\n          let exam = this.examInfo\n          exam.totalScore = this.sumTotalScore\n          exam.status = 1\n          //权限id设置\n          exam.type = this.examAuthority\n          if (this.examAuthority === 2) {//考试密码\n            if (this.examPassword === '') {// 当前用户选择了需要密码权限,但是密码为空\n              this.$message.error('当前权限为需要密码,但是密码为空')\n              return false\n            }\n            exam.password = this.examPassword\n          }\n          //题库组卷模式\n          if (this.makeModel === 1 && !this.addExamQuestion.some(item => item.bankId === '')) {\n            console.log(this.addExamQuestion)\n            let bankNames = []\n            this.addExamQuestion.forEach(item => bankNames.push(item.bankName))\n            exam.bankNames = bankNames.join(',')\n            exam.singleScore = this.addExamQuestion[0].singleScore\n            exam.multipleScore = this.addExamQuestion[0].multipleScore\n            exam.judgeScore = this.addExamQuestion[0].judgeScore\n            exam.shortScore = this.addExamQuestion[0].shortScore\n            examApi.addExamByBank(exam).then((resp) => {\n              if (resp.code === 200) this.$router.push('/examManage')\n            })\n          } else if (this.makeModel === 2) {//自由组卷模式\n            //题目id数组\n            let questionIds = []\n            //题目成绩数组\n            let scores = []\n            this.addExamQuestion2.forEach(item => {\n              questionIds.push(item.questionId)\n              scores.push(item.score)\n            })\n            exam.questionIds = questionIds.join(',')\n            exam.scores = scores.join(',')\n            console.log(exam)\n            examApi.addExamByQuestionList(exam).then((resp) => {\n              if (resp.code === 200) this.$router.push('/examManage')\n            })\n          } else {\n            this.$message.error('请检查考试规则设置是否完整')\n          }\n        }\n      }, '请检查考试规则设置是否完整')\n    }\n  },\n  computed: {\n    //计算总分\n    sumTotalScore () {\n      if (this.makeModel === 2) {\n        let score = 0\n        this.addExamQuestion2.forEach(item => {\n          score += parseInt(item.score)\n        })\n        return score\n      }\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"../../assets/css/teacher/addExam\";\n</style>\n"]}]}